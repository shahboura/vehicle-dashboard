.sdk_job_template: &sdk_definition
    image: mcr.microsoft.com/dotnet/core/sdk:3.0

.docker_job_template: &docker_definition
    image: docker
    services:
        - docker:dind
    before_script:
        - docker info
        - echo -n $CI_JOB_TOKEN | docker login -u gitlab-ci-token --password-stdin $CI_REGISTRY

.docker_job_push_template: &docker_push_definition
    <<: *docker_definition
    variables:
        GIT_STRATEGY: none
    dependencies: []

variables:
    _API_REGISTRY: $CI_REGISTRY_IMAGE/vehicle-api
    _ADMIN_API_REGISTRY: $CI_REGISTRY_IMAGE/vehicle-admin-api

stages:
    - build
    - test
    - deploy

build:
    <<: *sdk_definition
    stage: build
    script:
        - dotnet build -c Release
    artifacts:
        paths:
            - "src/*/bin"
        expire_in: 2 week

build-api-image:
    <<: *docker_definition
    stage: build
    script:
        - docker pull $_API_REGISTRY:latest || true
        - docker build
            --pull
            --build-arg VCS_REF=$CI_COMMIT_SHA
            --build-arg VCS_URL=$CI_PROJECT_URL
            --tag $_API_REGISTRY:$CI_COMMIT_SHA
            --file ./src/Dashboard.Api/Dockerfile .
        - docker push $_API_REGISTRY:$CI_COMMIT_SHA

build-admin-api-image:
    <<: *docker_definition
    stage: build
    script:
        - docker pull $_ADMIN_API_REGISTRY:latest || true
        - docker build
            --pull
            --build-arg VCS_REF=$CI_COMMIT_SHA
            --build-arg VCS_URL=$CI_PROJECT_URL
            --tag $_ADMIN_API_REGISTRY:$CI_COMMIT_SHA
            --file ./src/Dashboard.Admin.Api/Dockerfile .
        - docker push $_ADMIN_API_REGISTRY:$CI_COMMIT_SHA

unit-test:
    <<: *sdk_definition
    stage: test
    before_script:
        - dotnet tool install dotnet-reportgenerator-globaltool --tool-path tools
    script: 
        - "dotnet test --collect:'XPlat Code Coverage'"
        - ./tools/reportgenerator "-reports:tests/*/*/TestResults/*/coverage.cobertura.xml"
            "-targetdir:coveragereport" "-reporttypes:HTML;TextSummary;Badges"
        - cat ./coveragereport/Summary.txt
    coverage: '/Line coverage: (\d{1,2}.\d{1,2}\%)/'
    artifacts:
        paths:
            - coveragereport

push-api-image:
    <<: *docker_push_definition
    stage: deploy
    only:
        - master
    script:
        - docker pull $_API_REGISTRY:$CI_COMMIT_SHA
        - docker tag $_API_REGISTRY:$CI_COMMIT_SHA $_API_REGISTRY:latest
        - docker push $_API_REGISTRY:latest

push-admin-api-image:
    <<: *docker_push_definition
    stage: deploy
    only:
        - master
    script:
        - docker pull $_ADMIN_API_REGISTRY:$CI_COMMIT_SHA
        - docker tag $_ADMIN_API_REGISTRY:$CI_COMMIT_SHA $_ADMIN_API_REGISTRY:latest
        - docker push $_ADMIN_API_REGISTRY:latest